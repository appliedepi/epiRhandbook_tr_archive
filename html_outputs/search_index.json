[["_main.html", "The Epidemiologist R Handbook 1 output: bookdown::gitbook: R for applied epidemiology and public health How to use this handbook Acknowledgements Terms of Use and Contribution 2 Önyazı ve teknik notlar 2.1 Yaklaşım ve stil 2.2 Editöryal Kararlar 2.3 Büyük güncellemeler 2.4 Oturum bilgisi (R, RStudio, packages) 3 El Kitabı ve verileri indirme 3.1 Çevrimdışı el kitabı indirme 3.2 Örnek bazlı verileri indirme (BÖLÜM) Temel Bilgiler 4 R’ın Temelleri 4.1 Neden R Kullanıyoruz? 4.2 Anahtar Kelimeler 4.3 Öğrenme Kaynakları 4.4 Kurulum 4.5 RStudio 4.6 Fonksiyonlar” 4.7 Paketler 4.8 Komut Dosyaları 4.9 Çalışma dizini 4.10 Nesneler 4.11 Tünelleme (%&gt;%) 4.12 Anahtar operatörler ve fonksiyonlar 4.13 Hatalar ve uyarılar 5 R’a geçiş 5.1 Excel’den geçiş 5.2 Stata’dan geçiş 5.3 SAS’dan geçiş 5.4 Veri formatları 6 Önerilen paketler 6.1 Packages from CRAN 6.2 Github paketleri 7 R projeleri 7.1 Önerilen kullanım 7.2 Bir R projesi yaratma 7.3 Örnekler 7.4 Kaynaklar 8 İçe ve dışa aktar 8.1 Genel Bakış 8.2 rio paketi 8.3 here paketi 8.4 Dosya yolları 8.5 Verileri içe aktar 8.6 Birden çok dosya - içe aktarma, dışa aktarma, bölme, birleştirme 8.7 Github’dan içe aktar 8.8 Manuel veri girişi 8.9 En son dosyayı içe aktar 8.10 API’ler 8.11 Dışa aktarma 8.12 RDS dosyaları 8.13 Rdata dosyaları ve listeleri 8.14 Grafikleri kaydetme 8.15 Kaynaklar 9 Veri temizliği ve temel fonksiyonlar 9.1 Tünel hattını temizlemek 9.2 Paketlerin yüklenmesi 9.3 Verileri içe aktar 9.4 Sütun isimleri 9.5 Sütunların seçimi ve yeniden düzenlenmesi 9.6 Tekilleştirme 9.7 Sütun oluşturma ve dönüştürme 9.8 Değerlerin yeniden kodlanması 9.9 Sayısal kategoriler 9.10 Satır ekleme 9.11 Satırların filtrelenmesi 9.12 Satır tabanlı hesaplamalar 9.13 Düzenle ve sıraya diz 10 Tarihlerle çalışma 10.1 Hazırlık 10.2 Güncel tarih 10.3 Tarihe Dönüştürme 10.4 Excel tarihleri 10.5 Karışık tarihler 10.6 Date-time sınıfı ile çalışma 10.7 Tarihlerle çalışma 10.8 Tarihi gösterme 10.9 Epidemiyolojik haftalar 10.10 Tarihleri/saat dilimlerini dönüştürme 10.11 Gecikme ve önden gelme hesaplamaları 10.12 Kaynaklar 11 Karakterler ve dizeler 11.1 Hazırlık 11.2 Birleştir, böl ve düzenle 11.3 Temizleme ve standartlaştırma 11.4 Pozisyona göre düzenleme 11.5 Paternler 11.6 Özel karakterler 11.7 Düzenli ifadeler (regex) 11.8 Regex ve özel karakterler 11.9 Kaynaklar 12 Faktörler 12.1 Hazırlık 12.2 Faktöre dönüştürme 12.3 Seviye ekleme ve çıkarma 12.4 Seviye sırasını düzenleme 12.5 Eksik değerler 12.6 Seviyeleri birleştirme 12.7 Tüm seviyeleri gösterme 12.8 Epiweeks 12.9 Kaynaklar 13 Verilerin pivotlanması 13.1 Hazırlık 13.2 Genişten uzuna 13.3 Uzundan genişe 13.4 Doldurma 13.5 Kaynaklar 14 Verileri Gruplama 14.1 Hazırlık 14.2 Gruplandırma 14.3 Grubu kaldır 14.4 Özetleme 14.5 Sayımlar ve seriler 14.6 Tarihe göre gruplama 14.7 Gruplandırılmış verileri düzenleme 14.8 Gruplandırılmış verilere filtre uygula 14.9 Gruplandırılmış verileri dönüştürün 14.10 Gruplandırılmış verileri seçin 14.11 Kaynaklar 15 Veri Birleştirme 15.1 Hazırlık 15.2 dplyr birleştirmeleri 15.3 Olasılıksal eşleştirme 15.4 Bağlama ve hizalama 15.5 Kaynaklar 16 Tekilleştirme 16.1 Hazırlık 16.2 Tekilleştirme 16.3 Dilimleme 16.4 Toplama değerleri 16.5 Probabilistic de-duplication 16.6 Kaynaklar 17 Yineleme, döngüler ve listeler 17.1 Hazırlık 17.2 for döngüleri 17.3 purrr ve listeler 17.4 Fonksiyonları uygulama 17.5 Kaynaklar 18 Tanımlayıcı tablolar 18.1 Hazırlık 18.2 Verileri gözden geçirme 18.3 janitor paketi 18.4 dplyr paketi 18.5 gtsummary paketi 18.6 R tabanı 18.7 Kaynaklar 19 Basit istatistiksel testler 19.1 Hazırlık 19.2 rstatix paketi 19.3 gtsummary paketi 19.4 Korelasyonlar 19.5 Kaynaklar 20 Tek değişkenli ve çok değişkenli regresyon 20.1 Hazırlık 20.2 Tek değişkenli 20.3 Tabakalı 20.4 Çok Değişkenli 20.5 Forest Grafiği 20.6 Kaynaklar 21 Eksik Veri 21.1 Hazırlık 21.2 R’da eksik değerler 21.3 Faydalı fonksiyonları 21.4 Bir veri çerçevesindeki eksikliği değerlendir 21.5 Eksik değerlere sahip verileri kullanma 21.6 Atama 21.7 Kaynaklar 22 Standardize edilmiş hızlar 22.1 Genel bakış 22.2 Hazırlık 22.3 dsr paketi 22.4 PHEindicatormethods paketi 22.5 Kaynaklar 23 Hareketli ortalamalar 23.1 Hazırlık 23.2 slider ile hesaplama 23.3 ggplot() içinde tidyquant hesabı 23.4 Kaynaklar 24 Zaman serileri ve salgınların tespit edilmesi 24.1 Genel bakış 24.2 Hazırlık 24.3 Zaman serisi verisi 24.4 Tanımlayıcı analizler 24.5 Uyum regresyonları 24.6 İki zaman serisinin ilişkisi 24.7 Salgınların tespit edilmesi 24.8 Kesintili zaman serileri 24.9 Kaynaklar 25 Salgın Modelleme 25.1 Genel Bakış 25.2 Hazırlık 25.3 Rt Tahmini 25.4 Tahmini insidans 25.5 Kaynaklar 26 Temaslı izlemi 26.1 Hazırlık 26.2 Tanımlayıcı analizler 26.3 Temaslı Takibi 26.4 KPI Tabloları 26.5 Bulaş Matrisleri 26.6 Kaynaklar 27 Anket analizi 27.1 Genel bakış 27.2 Hazırlık 27.3 Anket verisi 27.4 Gözlem süresi 27.5 Ağırlıklandırma 27.6 Anket tasarım nesneleri 27.7 Tanımlayıcı analiz 27.8 Ağırlıklı orantılar 27.9 Ağırlıklı hızlar 27.10 Kaynaklar 28 Sağkalım Analizi 28.1 Genel Bakış 28.2 Hazırlık 28.3 Sağkalım analizinin temelleri 28.4 Sağkalım eğrilerinin karşılaştırılması 28.5 Cox regresyon analizi 28.6 Sağkalım modellerinde zamana bağlı değişkenler 28.7 Kaynaklar 29 Coğrafi Bilgi Sistemleri (CBS) Temelleri 29.1 Genel Bakış 29.2 Anahtar terimler 29.3 CBS’yi kullanmaya başlama 29.4 Hazırlık 29.5 Koordinatları grafikleştirme 29.6 Mekansal birleşimler 29.7 Choropleth haritaları 29.8 ggplot2 ile haritalandırma 29.9 Altlık Haritalar 29.10 Konturlu yoğunluk ısı haritaları 29.11 Mekansal istatistikler 29.12 Kaynaklar 30 Sunum için tablolar 30.1 Hazırlık 30.2 Temel flextable 30.3 Koşullu biçimlendirme 30.4 Bütün kodlar 30.5 Tablonun kaydedilmesi 30.6 Kaynaklar 31 ggplot temelleri 31.1 Hazırlık 31.2 ggplot temelleri 31.3 ggplot() 31.4 Geomlar 31.5 Verileri grafiğe eşleme 31.6 Yüzeyler / Küçük katlar 31.7 Grafikleri depolama 31.8 Etiketler 31.9 Temalar 31.10 Renkler 31.11 ggplot2 içine tünelleme 31.12 Sürekli verilere ait grafikler 31.13 Kategorik verilere ait grafikler 31.14 Kaynaklar 32 ggplot ipuçları 32.1 Hazırlık 32.2 Renk, dolgu, eksen vb. için ölçekler 32.3 Ayrık değişkenlerin sırasını değiştirmek 32.4 Kontur çizgileri 32.5 Marjinal dağılımlar 32.6 Akıllı Etiketleme 32.7 Zaman eksenleri 32.8 Vurgulama 32.9 Birden çok veri kümesini çizme 32.10 Grafikleri birleştirmek 32.11 Çift eksen 32.12 Size yardımcı olacak paketler 32.13 Çeşitli 32.14 Kaynaklar 33 Salgın eğrileri 33.1 Hazırlık 33.2 incidence2 paketi ile salgın eğrileri 33.3 ggplot2 ile salgın eğrileri 33.4 Geçici veriler 33.5 Çok seviyeli tarih etiketleri 33.6 Çift eksen 33.7 Kümülatif İnsidans 33.8 Kaynaklar 34 Demografik piramidler ve likert ölçekler 34.1 Hazırlık 34.2 apyramid paketi 34.3 ggplot() 34.4 Likert ölçek 34.5 Kaynaklar 35 Isı grafikleri 35.1 Hazırlık 35.2 Geçiş matrisi 35.3 Zaman içinde raporlama metrikleri 35.4 Kaynaklar 36 Diyagramlar ve çizelgeler 36.1 Hazırlık 36.2 Akış diyagramları 36.3 Alluvial/Sankey Diyagramları 36.4 Etkinlik zaman çizelgeleri 36.5 DAG’ler 36.6 Kaynaklar 37 Kombinasyon analizi 37.1 Hazırlık 37.2 ggupset 37.3 UpSetR 37.4 Kaynaklar 38 İletim Zincirleri 38.1 Genel Bakış 38.2 Hazırlık 38.3 İdare 38.4 Görselleştirme 38.5 Analiz 38.6 Kaynaklar 39 Filogenetik ağaçlar 39.1 Genel Bakış 39.2 Hazırlık 39.3 Temel ağaç görselleştirmesi 39.4 Ağacın Manipülasyonu Daha karmaşık ağaçlar: Örnek verilerin ısı haritalarını ekleme 39.5 Kaynaklar 40 Interactive plots 40.1 Preparation 40.2 Plot with ggplotly() 40.3 Modifications 40.4 Heat tiles 40.5 Resources 41 R Markdown ile Raporlar 41.1 Hazırlık 41.2 Başlangıç 41.3 R Markdown bileşenleri 41.4 Dosya yapısı 41.5 Belgenin oluşturulması 41.6 Parametreli Raporlar 41.7 Döngülü raporlar 41.8 Şablonlar 41.9 Dinamik içerik 41.10 Kaynaklar 42 Rutin raporların düzenlenmesi 42.1 Hazırlık 42.2 Yeni fabrika 42.3 Bir rapor oluşturun 42.4 Derlemek (Compile) 42.5 Çıktılar 42.6 Muhtelif İçerikler 42.7 Kaynaklar 43 R Markdown ile gösterge panelleri 43.1 Hazırlık 43.2 Yeni bir R Markdown oluştur 43.3 Komutlar 43.4 Bölüm Özellikleri 43.5 Yerleşim Düzeni 43.6 İçerik Ekleme 43.7 Kodun düzenlenmesi 43.8 Shiny 43.9 Paylaşım 43.10 Kaynaklar 44 Shiny ile Gösterge Panelleri 44.1 Hazırlık 44.2 Shiny uygulamasının yapısı 44.3 Kullanıcı Arayüzü (IU) Oluşturmak 44.4 Verinin uygulamamıza yüklenmesi 44.5 Bir uygulama sunucusu geliştirme 44.6 Daha fazla işlevsellik eklemek 44.7 Shiny Uygulamalarının Paylaşılması 44.8 İleri okuma 44.9 Önerilen shiny uzantıları 45 Yazma fonksiyonları 45.1 Hazırlık 45.2 Fonksiyonlar 45.3 Neden bir fonksiyon kullanırsın? 45.4 R, fonksiyonları nasıl oluşturur? 45.5 Temel sözdizimi ve yapı 45.6 Örnekler 45.7 purrr kullanımı: yinelemeli olarak uygulanabilen yazma fonksiyonları 45.8 İyi işleyen fonksiyonlar için ipuçları ve en iyi Uygulamalar 45.9 Kaynaklar 46 Dizin etkileşimleri 46.1 Hazırlık 46.2 Bir dizindeki dosyaları listeleyin 46.3 Dosya bilgisi 46.4 Var olup olmadığını kontrol edin 46.5 Oluşturmak 46.6 Silmek 46.7 Diğer dosyaları çalıştırma 46.8 R tabanı 46.9 Kaynaklar 47 Git ve Github ile sürüm kontrolü ve işbirliği 47.1 Git nedir? 47.2 Neden Git ve Github kombinasyonunu kullanmalısınız? 47.3 Kurmak 47.4 Kelime bilgisi, kavramlar ve temel işlevler 47.5 Başlayın: yeni bir depo oluşturun 47.6 Git + Github iş akışı 47.7 Yeni bir dal oluştur 47.8 Değişiklikleri Uygula (Commit Changes) 47.9 Değişiklikleri Github’a kadar çekin ve iletin 47.10 Dalını Ana Gövde ile birleştir 47.11 Öğrendiklerimiz 47.12 Git komutları 47.13 Kaynaklar 48 Yaygın hatalar 48.1 Hata mesajlarını yorumlama 48.2 Yaygın hatalar 48.3 Kaynaklar 49 Yardım alma 49.1 Github sorunları 49.2 Tekrarlanabilir örnek 49.3 Bir foruma gönderme 49.4 Kaynaklar 50 Ağ sürücülerinde R 50.1 Genel Bakış 50.2 Yönetici olarak RStudio 50.3 Faydalı komutlar 50.4 Sık karşılaşılan hataları giderme 51 Veri tablosu 51.1 Veri tablolarına giriş 51.2 Paketleri yükleyin ve verileri içe aktarın 51.3 i değişkeni: satırları seçme ve filtreleme 51.4 j değişkeni: sütunları seçme ve hesaplama 51.5 Değişkene göre: gruplara göre hesaplama 51.6 Veri tablolarına ekleme ve güncelleme 51.7 Kaynaklar", " The Epidemiologist R Handbook the handbook team 2022-11-20 1 output: bookdown::gitbook: Placeholder R for applied epidemiology and public health How to use this handbook Acknowledgements Contributors Funding and support Inspiration Terms of Use and Contribution License Citation Contribution 2 Önyazı ve teknik notlar Placeholder 2.1 Yaklaşım ve stil R paketleri Kodlama stili Terminoloji Notlar 2.2 Editöryal Kararlar 2.3 Büyük güncellemeler 2.4 Oturum bilgisi (R, RStudio, packages) 3 El Kitabı ve verileri indirme Placeholder 3.1 Çevrimdışı el kitabı indirme İndirme linkini kullanarak R paketimizi kullanın 3.2 Örnek bazlı verileri indirme R paketimizi kullanma Tek tek indirme Vaka satır listesi Sıtma sayısı verileri Likert ölçekli veri Esnek pano Temaslı İzleme GIS Filogenetik ağaçlar Standardizasyon Zaman serileri ve salgın tespiti Anket analizi Shiny (BÖLÜM) Temel Bilgiler 4 R’ın Temelleri Placeholder 4.1 Neden R Kullanıyoruz? 4.2 Anahtar Kelimeler 4.3 Öğrenme Kaynakları RStudio İçindeki Kaynaklar Kopya Kağıtları Twitter Ücretsiz Çevrimiçi Kaynaklar İngilizce dışındaki dillerde 4.4 Kurulum R ve RStudio Kurulumuna ihtiyaç duyabileceğiniz diğer yazılımlar TinyTex Pandoc RTools phantomjs 4.5 RStudio RStudio Yönlendirmesi 4.5.1 RStudio ayarları Klavye kısayolları 4.6 Fonksiyonlar” Basit Fonksiyonlar Birden çok bağımsız değişkene sahip fonksiyonlar Fonksiyon Yazma 4.7 Paketler Kurulum ve Yükleme Senin Kütüphanen CRAN ’dan Kurulum Nasıl kurulum yapar ve yüklerim? Kod sözdizimi Fonksiyon yardımı Paketleri güncelleyin Paketleri sil Bağlılıklar 4.7.1 Maskelenmiş fonksiyonlar Ayır / kaldır Eski sürümü yükleyin Önerilen paketler 4.8 Komut Dosyaları Yorum yapma 4.8.1 Stil Örnek Komut Dosyası R işaretleme (R Markdown) R not defterleri Parlak Kod katlama 4.9 Çalışma dizini Manuel olarak ayarla Bir R projesi içinde R markdown için çalışma dizini Dosya yolları sağlama 4.10 Nesneler Her şey bir nesnedir Nesneleri tanımlama (&lt;-) Nesne yapısı Nesne sınıfları Sütunlar/Değişkenler ($) Köşeli ayraçlarla erişim/dizin ([ ]) Nesneleri kaldırma 4.11 Tünelleme (%&gt;%) Tüneller Ara nesneleri tanımlayın 4.12 Anahtar operatörler ve fonksiyonlar Atama operatörleri İlişkisel ve mantıksal operatörler Eksik değerler Matematik ve istatistik Matematiksel operatörler Matematiksel fonksiyonlar Bilimsel gösterim Yuvarlama İstatistiksel fonksiyonlar Diğer kullanışlı fonksiyonlar %in% 4.13 Hatalar ve uyarılar Hata VS. Uyarı Genel sözdizimi ipuçları Kod yardımı 5 R’a geçiş Placeholder 5.1 Excel’den geçiş Faydaları Düzenli veri Fonksiyonlar Kodlar Excel’den R’a geçiş kaynakları R-Excel etkileşimi 5.2 Stata’dan geçiş 5.3 SAS’dan geçiş 5.4 Veri formatları 6 Önerilen paketler Placeholder 6.1 Packages from CRAN 6.2 Github paketleri 7 R projeleri Placeholder 7.1 Önerilen kullanım 7.2 Bir R projesi yaratma Projeler arasında geçiş yapma Ayarlar Organizasyon Versiyon kontrolü 7.3 Örnekler 7.4 Kaynaklar 8 İçe ve dışa aktar Placeholder 8.1 Genel Bakış 8.2 rio paketi 8.3 here paketi 8.4 Dosya yolları “İlişkili” dosya yolları “Mutlak” dosya yolları Dosyayı manuel olarak seçin 8.5 Verileri içe aktar Belirli Excel sayfaları Eksik değerler Satırları atla İkinci bir başlık satırını yönetin İkinci başlık satırını kaldırın Veri sözlüğü oluşturun İki başlık satırını birleştirin Google sayfaları 8.6 Birden çok dosya - içe aktarma, dışa aktarma, bölme, birleştirme 8.7 Github’dan içe aktar CSV dosyaları XLSX dosyaları Şekil dosyaları (Shapefiles) 8.8 Manuel veri girişi Satırlara göre giriş Sütunlara göre giriş Panodan yapıştırma 8.9 En son dosyayı içe aktar Dosya adındaki tarihler Dosya bilgisini kullanın 8.10 API’ler HTTP isteği Paketler Herkese açık veriler Kimlik doğrulama gerekli 8.11 Dışa aktarma rio paketiyle Panoya 8.12 RDS dosyaları 8.13 Rdata dosyaları ve listeleri 8.14 Grafikleri kaydetme 8.15 Kaynaklar 9 Veri temizliği ve temel fonksiyonlar Placeholder Temel fonksiyonlar İsimlendirme 9.1 Tünel hattını temizlemek 9.2 Paketlerin yüklenmesi 9.3 Verileri içe aktar İçe aktarma Gözden geçirme 9.4 Sütun isimleri Etiketler Otomatik Temizleme Manuel isim temizliği Sütun konumuna göre yeniden adlandırma select() ve summarise() ile yeniden adlandırma Diğer sorunlar Boş excel sütun isimleri Birleştirilmiş Excel sütun adları ve hücreleri 9.5 Sütunların seçimi ve yeniden düzenlenmesi Sütunları koru “tidyselect” yardımcı fonksiyonları Sütunları kaldır Bağımsız (Standalone) Tünel zincirine ekleme 9.6 Tekilleştirme 9.7 Sütun oluşturma ve dönüştürme Yeni sütunlar Sütun sınıfının dönüşümü Gruplandırılmış veri Birden çok sütunu dönüştürün across() sütun seçimi across() fonksiyonları coalesce() Kümülatif Matematik R Tabanı kullanımı Tünel zincirine ekleme yapma 9.8 Değerlerin yeniden kodlanması Spesifik değerler Mantık kullanımı Basit mantık replace() ifelse() ve if_else() Karmaşık mantık Eksik değerler Sözlüğün temizlenmesi Tünel zincirine ekleme 9.9 Sayısal kategoriler Dağılımın gözden geçirilmesi age_categories() cut() Yüzdelik kesim noktaları Eşit boyutlu gruplar case_when() Tünel zincirine ekleme 9.10 Satır ekleme Teker teker Satırların bağlanması 9.11 Satırların filtrelenmesi Basit Filtre Eksik değerlerin filtrelenmesi Satır numarasına göre filtreleme Karmaşık filtre Verinin incelenmesi Eksik sayısal ve tarih verilerinin filtrelenmesi Filtre Dizaynı Bağımsız (Standalone) Kayıtların hızla gözden geçirilmesi Tünel zincirine ekleme 9.12 Satır tabanlı hesaplamalar 9.13 Düzenle ve sıraya diz 10 Tarihlerle çalışma Placeholder 10.1 Hazırlık Paketleri yüklemek Verileri içe aktarma 10.2 Güncel tarih 10.3 Tarihe Dönüştürme base R lubridate Sütunları birleştirme 10.4 Excel tarihleri 10.5 Karışık tarihler 10.6 Date-time sınıfı ile çalışma Tarihleri saatlerle dönüştürme Sadece saatleri çevirme Saati ayıklama 10.7 Tarihlerle çalışma Tarih bileşenlerini ayıklama Tarih matematiği Tarih aralıkları 10.8 Tarihi gösterme format() Ay-Yıl 10.9 Epidemiyolojik haftalar lubridate Haftalık sayımlar Epiweek alternatifleri 10.10 Tarihleri/saat dilimlerini dönüştürme 10.11 Gecikme ve önden gelme hesaplamaları 10.12 Kaynaklar 11 Karakterler ve dizeler Placeholder 11.1 Hazırlık Paketleri yükleme Verileri yükleme 11.2 Birleştir, böl ve düzenle Dizeleri Birleştirme Dinamik dizeler Sütunları birleştirme Ayırma Sütunları ayırma Alfabetik olarak düzenle R tabanı fonksiyonları 11.3 Temizleme ve standartlaştırma Karakterleri değiştirme Karakter uzunluğu Kesme Standart uzunluk Baştaki/sondaki boşlukları kaldırma Tekrarlanan boşlukları kaldırma Paragrafa sığdırma 11.4 Pozisyona göre düzenleme Karakter pozisyonuna göre çıkarma Kelime pozisyonuna göre çıkarma Karakteri pozisyonuna göre değiştirme Uzunluğu değerlendirme 11.5 Paternler Patern bulma Virgülleri noktalara dönüştürme Tamamını değiştirme Mantığa göre arama Patern konumunu bulma Eşleşeni çıkarma Alt küme ve sayı Regex grupları 11.6 Özel karakterler 11.7 Düzenli ifadeler (regex) 11.8 Regex ve özel karakterler 11.9 Kaynaklar 12 Faktörler Placeholder 12.1 Hazırlık Paketlerin yüklenmesi Veriyi içe aktarma Yeni kategorik değişken Sütun oluşturma Varsayılan değer sırası 12.2 Faktöre dönüştürme 12.3 Seviye ekleme ve çıkarma Ekleme Çıkarma 12.4 Seviye sırasını düzenleme Elle düzenleme Grafik içinde Tersine döndürme Sıklığa göre Karşılaşmaya göre Başka bir sütunun özet istatistiğine göre “Son” değere göre 12.5 Eksik değerler 12.6 Seviyeleri birleştirme Elle düzenleme “Diğerine” indirgeme Frekansa göre indirgeme 12.7 Tüm seviyeleri gösterme Grafiklerde Tablolarda 12.8 Epiweeks Grafiklerde epiweeks Verilerde epiweeks 12.9 Kaynaklar 13 Verilerin pivotlanması Placeholder 13.1 Hazırlık Paketlerin yüklenmesi Verinin içeri aktarımı Sıtma hastalığı için sayım verisi Satır listesi verisi 13.2 Genişten uzuna “Geniş” format pivot_longer() Standard pivoting Birden çok sınıfa ait verinin pivotlanması 13.3 Uzundan genişe Veri Daha geniş olarak pivotlama 13.4 Doldurma Veri fill() 13.5 Kaynaklar 14 Verileri Gruplama Placeholder 14.1 Hazırlık Paketleri yükleyin Verileri içe aktar 14.2 Gruplandırma Benzersiz gruplar Yeni sütunlar Gruplandırma sütunlarını ekle/bırak 14.3 Grubu kaldır 14.4 Özetleme 14.5 Sayımlar ve seriler tally() count() Sayıları ekle Toplamları ekle 14.6 Tarihe göre gruplama Günlere göre satır listesi vakaları Haftalara bölünmüş satır listesi vakaları Aylara ayrılmış satır listesi vakaları Haftalara göre günlük sayım Aylara göre günlük sayımlar 14.7 Gruplandırılmış verileri düzenleme 14.8 Gruplandırılmış verilere filtre uygula filtre() Grup başına satırları dilimleyin Grup boyutuna göre filtreleyin 14.9 Gruplandırılmış verileri dönüştürün 14.10 Gruplandırılmış verileri seçin 14.11 Kaynaklar 15 Veri Birleştirme Placeholder 15.1 Hazırlık Paketleri yükleme Verileri içe aktarma Örnek veri kümeleri “Minyatür” vaka satır listesi Hastane bilgi veri çerçevesi Ön temizleme 15.2 dplyr birleştirmeleri Genel sözdizimi Sol ve sağ birleşimler “Sağ birleştirme mi yoksa sol birleştirme mi kullanmalıyım?” Tam birleşme İç birleştirme Yarım birleştirme Karşıt birleştirme Basit anti_join() örneği Karmaşık anti_join() örneği 15.3 Olasılıksal eşleştirme Olasılıksal eşleşme Olasılıksal veri tekilleştirme 15.4 Bağlama ve hizalama Satırları bağlama Sütunları bağla Sırasını hizalamak için match() kullanımı 15.5 Kaynaklar 16 Tekilleştirme Placeholder 16.1 Hazırlık Paketleri yükleme Verileri içeri aktarma Veri Çerçevesi 16.2 Tekilleştirme Yinelenen satırları inceleme Yalnızca benzersiz satırları tutma Bir vektörde yinelenen öğeler base R’ı kullanma 16.3 Dilimleme Gruplarla dilimleme Hepsini sakla ama işaretle Satır tamlığını hesapla 16.4 Toplama değerleri Değerleri bir satıra topla Değerlerin/hiyerarşinin üzerine yaz 16.5 Probabilistic de-duplication 16.6 Kaynaklar 17 Yineleme, döngüler ve listeler Placeholder 17.1 Hazırlık Paketleri yükleme Verileri içe aktarma 17.2 for döngüleri R’daki for döngüleri* Temel bileşenler Sıralama Operasyonlar Kapsayıcı Yazdırma For döngüsünü test etme Döngü grafikleri Bir döngünün ilerlemesini izleme 17.3 purrr ve listeler Paketleri yükleme map() Örnek - Excel sayfalarını içe aktarın ve birleştirin Veri kümesini bölme ve dışa aktarma Bölünmüş veri seti Birden fazla group_split() sütunu Excel sayfaları olarak dışa aktar Export as CSV files Özel işlevler Sütunlar arasında bir fonksiyonu eşleme Listeden çıkarma Elementlerin isimleri Ada veya konuma göre öğeler pluck() Listeyi veri çerçevesine dönüştür Listeleri atma, saklama ve sıkıştırma pmap() 17.4 Fonksiyonları uygulama 17.5 Kaynaklar 18 Tanımlayıcı tablolar Placeholder 18.1 Hazırlık Paketleri yükleme Verinin içeri aktarımı 18.2 Verileri gözden geçirme skimr paketi Özet İstatistikleri 18.3 janitor paketi Basit tabyl Çapraz tablolar tabyl’in “süslenmesi” tabyl çıktısının alınması Diğer tablolarda kullanımı tabyl kaydedilmesi İstatistikler Diğer ipuçları 18.4 dplyr paketi Gözlem sayılarını elde etme Tüm seviyelerin gösterimi Oranlar Grafikleştirme Özet istatistiği Koşullu istatistikler Hepsini birleştirmek Yüzdelikler Birleştirilmiş verileri özetleyin across() birden çok sütun arasından Pivot genişletme Toplam satırlar janitor’ün adorn_totals() fonskiyonu Toplam veride summarise() sonrasında bind_rows() fonksiyonu 18.5 gtsummary paketi Özet tablosu Ayarlar Sürekli değişkenler için çok satırlı istatistikler 18.6 R tabanı Oranlar Toplamlar Veri çerçevesine dönüştürmek 18.7 Kaynaklar 19 Basit istatistiksel testler Placeholder 19.1 Hazırlık Paketleri yükleyin Verileri içe aktar T testleri Shapiro-Wilk testi Wilcoxon sıralama toplamı testi Kruskal-Wallis testi Ki-kare testi 19.2 rstatix paketi Özet istatistikler T-testi Shapiro-Wilk testi Wilcoxon sıralama toplamı testi Kruskal-Wallis testi Ki-kare testi 19.3 gtsummary paketi Ki-kare testi T testleri Wilcoxon sıralama toplamı testi 19.3.1 Kruskal-wallis testi 19.4 Korelasyonlar 19.5 Kaynaklar 20 Tek değişkenli ve çok değişkenli regresyon Placeholder 20.1 Hazırlık Paketleri yükleyin Verileri içe aktar Temiz veri Açıklayıcı değişkenleri saklayın 1’lere ve 0’lara dönüştür Eksik değerlere sahip satırları bırakın 20.2 Tek değişkenli base R Doğrusal (Lineer) regresyon Lojistik regresyon Tek değişkenli glm() Sonuçları yazdırmak Birden çok tek değişkenli modeli döngüye alma gtsummary paketi 20.3 Tabakalı 20.4 Çok Değişkenli Çok değişkenli yürütme Modeli oluşturma Tek değişkenli ve çok değişkenli birleştirme gtsummary ile birleştirme dplyr ile birleştirme 20.5 Forest Grafiği ggplot2 paketi easystats paketleri 20.6 Kaynaklar 21 Eksik Veri Placeholder 21.1 Hazırlık Paketleri yükleyin Verileri içe aktar İçe aktarma işleminde eksikliği dönüştürme 21.2 R’da eksik değerler “NA” “NA” sürümleri ‘NULL’ NaN “Inf” Örnekler 21.3 Faydalı fonksiyonları is.na() ve !is.na() na.omit() drop_na() na.rm = DOĞRU 21.4 Bir veri çerçevesindeki eksikliği değerlendir Eksikliği ölçme Eksikliği görselleştirme Eksiklik ilişkilerini keşfedin ve görselleştirin “Gölge” sütunları 21.5 Eksik değerlere sahip verileri kullanma Eksik değerlere sahip satırları filtreleyin ggplot() içindeki NAyı işleme Faktörlerde “NA” 21.6 Atama Eksik veri türleri Faydalı paketler Ortalama Atama Regresyon ataması LOCF ve BOCF Çoklu Atama 21.7 Kaynaklar 22 Standardize edilmiş hızlar Placeholder 22.1 Genel bakış 22.2 Hazırlık Paketlerin yüklenmesi Popülasyon verisinin yüklenmesi Ölüm sayılarının yüklenmesi Nüfus ve ölüm verilerinin temizliği Referans popülasyonun yüklenmesi Referans popülasyon verisinin temizliği Standart popülasyon ile veri tabanının oluşturulması 22.3 dsr paketi Standardize edilmiş hızlar Standardize hız oranları Standardize hız farkı 22.4 PHEindicatormethods paketi Direkt standardize edilmiş hızlar İndirekt standardize edilmiş hızlar 22.5 Kaynaklar 23 Hareketli ortalamalar Placeholder 23.1 Hazırlık Paketleri yükleme Verinin içe aktarımı 23.2 slider ile hesaplama Tarihe göre yuvarlama İndekslenmiş veri Gruba göre yuvarlanma 23.3 ggplot() içinde tidyquant hesabı 23.4 Kaynaklar 24 Zaman serileri ve salgınların tespit edilmesi Placeholder 24.1 Genel bakış 24.2 Hazırlık Paketler Veri yükleme Temiz veri İklim verisinin indirilmesi İklim verisinin yüklenmesi 24.3 Zaman serisi verisi Duplikasyonlar Eksikler 24.4 Tanımlayıcı analizler Hareketli ortalamalar Periyodisite Ayrıştırma Otokorelasyon 24.5 Uyum regresyonları Fourier terimleri Negatif binomial Artıklar (Residuals) 24.6 İki zaman serisinin ilişkisi Veritabanlarının birleştirilmesi Tanımlayıcı analizler Gecikmeler ve çapraz korelasyonlar İki değişkenli negatif binomial Rezidüeller (Artıklar) 24.7 Salgınların tespit edilmesi trending paketi Kesim (eşik) tarihi Satır eklemek Fourier terimleri Verinin bölünmesi ve uyumlu regresyon Öngörünün doğrulanması (validasyonu) surveillance paketi GLRNB yöntemi 24.8 Kesintili zaman serileri 24.9 Kaynaklar 25 Salgın Modelleme Placeholder 25.1 Genel Bakış 25.2 Hazırlık 25.3 Rt Tahmini EpiNow2 vs. EpiEstim EpiNow2 Tahmini gecikme dağılımları EpiNow2 Çalıştırmak Çıktıları analiz etme EpiEstim Literatürden seri aralık tahminlerini kullanma Verilerden seri aralık tahminlerini kullanma Tahmin zaman pencerelerini belirtme Çıktıları analiz etme 25.4 Tahmini insidans EpiNow2 Projeksiyonlar Literatürden seri aralık tahminlerini kullanma Verilerinden seri aralık tahminlerini kullanma Tahmini insidans 25.5 Kaynaklar 26 Temaslı izlemi Placeholder 26.1 Hazırlık Paketleri yükleyin Verileri içe aktarma Vaka verileri Kişi verileri Takip verileri İlişki verileri 26.2 Tanımlayıcı analizler Demografi Temaslıların yaşı ve cinsiyeti Vaka başına kişi sayısı 26.3 Temaslı Takibi Veri temizleme Zaman içinde grafik Günlük bireysel izleme Grubuna göre analiz et 26.4 KPI Tabloları 26.5 Bulaş Matrisleri 26.6 Kaynaklar 27 Anket analizi Placeholder 27.1 Genel bakış 27.2 Hazırlık Paketler Veri yükleme Veri temizleme 27.3 Anket verisi 27.4 Gözlem süresi 27.5 Ağırlıklandırma 27.6 Anket tasarım nesneleri 27.6.1 Survey paketi 27.6.2 Srvyr paketi 27.7 Tanımlayıcı analiz 27.7.1 Örnekleme yanlılığı 27.7.2 Demografik piramitler 27.7.3 Alluvial/sankey diagramı 27.8 Ağırlıklı orantılar 27.8.1 Survey paketi 27.8.2 Srvyr paketi 27.8.3 Sitrep paketi 27.8.4 Gtsummary paketi 27.9 Ağırlıklı hızlar 27.9.1 Survey paketi 27.9.2 Srvyr paketi 27.10 Kaynaklar 28 Sağkalım Analizi Placeholder 28.1 Genel Bakış 28.2 Hazırlık Paketleri yükleyin Veri kümesini içe aktar Veri yönetimi ve dönüştürme 28.3 Sağkalım analizinin temelleri Sağkalım analiz materyali oluşturma İlk analizleri çalıştırma Kümülatif risk Kaplan-Meier eğrilerinin çizilmesi 28.4 Sağkalım eğrilerinin karşılaştırılması Log rank testi 28.5 Cox regresyon analizi Cox modelini uyarlama Forest grafikleri 28.6 Sağkalım modellerinde zamana bağlı değişkenler Zaman bağımlı ortak değişken kurulumu Özgün hasta tanımlayıcısı ekleme Hasta dizilerini genişletme Zamana bağlı ortak değişkenlerle cox regresyonu 28.7 Kaynaklar 29 Coğrafi Bilgi Sistemleri (CBS) Temelleri Placeholder 29.1 Genel Bakış 29.2 Anahtar terimler CBS yazılımı Mekansal veri Uzamsal verileri görselleştirme 29.3 CBS’yi kullanmaya başlama Verilerinizi görselleştirmek için harita türleri 29.4 Hazırlık Paketleri yükleyin Örnek vaka verileri Yönetici sınır şekil dosyaları Nüfus verileri Sağlık Tesisleri 29.5 Koordinatları grafikleştirme 29.6 Mekansal birleşimler Çokgendeki noktalar En yakın komşu Tamponlar Diğer uzamsal birleşimler 29.7 Choropleth haritaları 29.8 ggplot2 ile haritalandırma 29.9 Altlık Haritalar OpenStreetMap 29.10 Konturlu yoğunluk ısı haritaları Zaman serisi ısı haritası 29.11 Mekansal istatistikler Mekansal ilişkiler Mekansal otokorelasyon Mekansal regresyon 29.12 Kaynaklar 30 Sunum için tablolar Placeholder 30.1 Hazırlık Paketleri yükleme Verileri içe aktarma Tabloyu hazırlama 30.2 Temel flextable Flextable oluşturma Sütun genişliği Sütun başlıkları Kenarlıklar ve arka plan Yazı tipi ve hizalama Hücreleri birleştirme Arka plan rengi 30.3 Koşullu biçimlendirme 30.4 Bütün kodlar 30.5 Tablonun kaydedilmesi Tek bir tablonun kaydedilmesi Tabloyu R markdown’da yazdırma 30.6 Kaynaklar 31 ggplot temelleri Placeholder 31.1 Hazırlık Paketlerin yüklenmesi Verileri içe aktarma Genel temizleme Uzun formata döndürme 31.2 ggplot temelleri 31.3 ggplot() 31.4 Geomlar 31.5 Verileri grafiğe eşleme Grafik estetiği Statik bir değer ayarlama Sütun değerlerine ölçekleme Harita atamaları nerede yapılır Grouplar 31.6 Yüzeyler / Küçük katlar facet_wrap() facet_grid() Serbest veya sabit eksenler Yüzeylerde faktör düzeyi sırası 31.7 Grafikleri depolama Grafikleri kaydetme Kayıtlı grafikleri değiştirme Grafikleri dışa aktarma 31.8 Etiketler 31.9 Temalar Tam temalar Temayı düzenleme 31.10 Renkler 31.11 ggplot2 içine tünelleme 31.12 Sürekli verilere ait grafikler Histogramlar Çubuk grafikleri Violin, jitter ve sina grafikleri İki sürekli değişken Üç sürekli değişken 31.13 Kategorik verilere ait grafikler Hazırlık Veri yapısı Sütun sınıfı ve değer sıralaması geom_bar() geom_col() geom_histogram() 31.14 Kaynaklar 32 ggplot ipuçları Placeholder 32.1 Hazırlık Paketleri yükleme Verileri içe aktarma 32.2 Renk, dolgu, eksen vb. için ölçekler 32.2.1 Renk şemaları Ölçekler Ölçek değişkenleri Manuel ayarlamalar Sürekli eksen ölçekleri Yüzdeleri göster Logaritmik ölçeği Gradyan ölçekleri Paletler Colorbrewer ve Viridis 32.3 Ayrık değişkenlerin sırasını değiştirmek 32.3.0.1 ggthemr 32.4 Kontur çizgileri 32.5 Marjinal dağılımlar 32.6 Akıllı Etiketleme 32.7 Zaman eksenleri 32.8 Vurgulama 32.9 Birden çok veri kümesini çizme 32.10 Grafikleri birleştirmek plot_grid() Göstergeleri birleştir Ek grafikler 32.11 Çift eksen 32.12 Size yardımcı olacak paketler İşaretle ve tıkla ggplot2 ile equisse 32.13 Çeşitli Sayısal ekran 32.14 Kaynaklar 33 Salgın eğrileri Placeholder 33.1 Hazırlık Paketler Verileri içe aktarma Parametreleri ayarlamak Tarihleri doğrulama 33.2 incidence2 paketi ile salgın eğrileri Basit örnek Vaka toplamanın zaman aralığını değiştirmek Gruplar Filtrelenmiş veri Toplu sayımlar Yönlendirmeler/küçük katlar plot() ile yapılan değişiklikler ggplot2 ile değişiklikler Renkleri değiştirmek Bir palet belirtin Manuel olarak belirtin Seviye sırasını ayarla Dikey klavuz çizgileri Kümülatif insidans Ortalama yuvarlama 33.3 ggplot2 ile salgın eğrileri Vaka bölmelerini belirtin Haftalık salgın eğrisi örneği Pazar haftaları Sunumlar Toplu veri 33.4 Geçici veriler annotate() kullanma 33.5 Çok seviyeli tarih etiketleri 33.6 Çift eksen 33.7 Kümülatif İnsidans 33.8 Kaynaklar 34 Demografik piramidler ve likert ölçekler Placeholder 34.1 Hazırlık Paketleri yükleme Veriyi içe aktarma Temizleme 34.2 apyramid paketi Linelist data Eksik veriler Oranlar, renkler ve estetik Toplu veri 34.3 ggplot() Hazırlık Grafiği oluşturma Baz değerleriyle ile karşılaştırma 34.4 Likert ölçek 34.5 Kaynaklar 35 Isı grafikleri Placeholder 35.1 Hazırlık Paketleri yükle 35.2 Geçiş matrisi Veri Hazırlama Vaka veri çerçevesi yapmak Bulaştırıcıların veri çerçevesini yapmak Isı grafiği oluşturmak 35.3 Zaman içinde raporlama metrikleri Veri Hazırlama Toplama ve özetleme Isı grafiği oluştur Temel Temizlenmiş grafik Sıralı y ekseni Değerleri göster 35.4 Kaynaklar 36 Diyagramlar ve çizelgeler Placeholder 36.1 Hazırlık Paketleri yükleme Verileri içe aktarma 36.2 Akış diyagramları Basit örnekler Sözdizimi Karmaşık örnekler Çıktılar Parametreli şekiller 36.3 Alluvial/Sankey Diyagramları Paketleri yükleme Veri kümesinden grafik yapma 36.4 Etkinlik zaman çizelgeleri 36.5 DAG’ler 36.6 Kaynaklar 37 Kombinasyon analizi Placeholder 37.1 Hazırlık Paketleri yükleyin Verileri içe aktar Değerleri yeniden biçimlendir 37.2 ggupset 37.3 UpSetR 37.4 Kaynaklar 38 İletim Zincirleri 38.1 Genel Bakış İletim zincirlerini ve temas izleme verilerini işlemek, analiz etmek ve görselleştirmek için birincil araç, RECON tarafından geliştirilen epicontacts paketidir. Daha fazla bilgi için imleci nodların üzerine getirerek, taşımak için sürükleyerek ve aşağı akış durumlarını vurgulamak için üzerlerine tıklayarak aşağıdaki etkileşimli grafiği deneyin 38.2 Hazırlık Paketlerin yüklenmesi Önce verilerin içe aktarılması ve işlenmesi için gereken standart paketleri yükleyin. Bu el kitabında, gerekirse paketi kuran ve kullanım için yükleyen pacman’ın ‘p_load()’ fonksiyonunu vurguluyoruz. Ayrıca R tabanı’ndan ‘library()’ ile paketleri yükleyebilirsiniz. R paketleri hakkında daha fazla bilgi için R’ın temelleri[R Basics] sayfasına bakın. pacman::p_load( rio, # Dosyanın içe aktarımı here, # Dosyanın konumlandırılması tidyverse, # Veri yönetimi + ggplot2 grafikleri remotes # github’dan paketlerin kurulumu ) Pacman’ın p_install_github() fonksiyonu kullanılarak github’dan yüklenebilen epicontacts’ın geliştirme sürümüne ihtiyacınız olacak. Aşağıdaki komutu yalnızca bir kez çalıştırmanız gerekir, paketi her kullandığınızda değil (bundan sonra her zamanki gibi p_load() kullanabilirsiniz). pacman::p_install_gh(&quot;reconhub/epicontacts@timeline&quot;) Verinin içeri aktarımı Simüle edilmiş bir Ebola salgını vakalarından oluşan veri setini içe aktarıyoruz. Adım adım verileri indirmek istiyorsanız, el kitabı ve verilerin indirilmesi sayfasındaki talimatlara [Download handbook and data] bakın. Veri seti, rio paketinden import() fonkisyonu kullanılarak içe aktarılır. Verileri içe aktarmanın çeşitli yolları için İçe ve dışa aktarma sayfasına [Import and export] bakın. # satır listesini içe aktarın linelist &lt;- import(&quot;linelist_cleaned.xlsx&quot;) Çizgi listesinin ilk 50 satırı aşağıda gösterilmiştir. Özellikle ilgi çekici olan sütunlar : ‘case_id’, ‘generation’, ‘infector’ ve ‘source’. Epicontacts nesnesi oluşturma Daha sonra iki tür veri gerektiren bir epicontacts nesnesi oluşturmamız gerekiyor: • Sütunların değişken olduğu ve satırların benzersiz durumlara karşılık geldiği bir satır listesi • Benzersiz kimliklerle vakalar arasındaki bağlantıları tanımlayan kenarların bir listesi (bunlar kişiler, aktarım olayları vb. olabilir) Halihazırda bir satır listemiz olduğundan, vakalar arasında, daha spesifik olarak kimlikleri arasında bir kenar listesi oluşturmamız gerekiyor. Enfektör sütununu ‘case_id’ sütununa bağlayarak satır listesinden iletim bağlantılarını çıkarabiliriz. Bu noktada, vakaların kendilerini değil, iki durum arasındaki bağlantıyı tanımlayan herhangi bir değişkeni gösterdiğimiz kenar özelliklerini (edge properties) de ekleyebiliriz. Örnek olarak, iletim olayının konumunu tanımlayan bir konum değişkeni ve gün cinsinden temasın süresini tanımlayan bir süre değişkeni ekleyeceğiz. Aşağıdaki kodda, dplyr fonksiyonu transmut’e, yalnızca fonksiyon içinde belirttiğimiz sütunları tutması dışında mutate’e benzer. drop_na fonksiyonu, belirtilen sütunlarda bir NA değeri olan tüm satırları filtreleyecektir; bu durumda, yalnızca bulaştırıcının bilindiği satırları tutmak istiyoruz. ## kişileri oluştur contacts &lt;- linelist %&gt;% transmute( infector = infector, case_id = case_id, location = sample(c(&quot;Community&quot;, &quot;Nosocomial&quot;), n(), TRUE), duration = sample.int(10, n(), TRUE) ) %&gt;% drop_na(infector) Artık ‘make_epicontacts’ fonksiyonunu kullanarak epicontacts nesnesini oluşturabiliriz. Satır listesindeki hangi sütunun benzersiz vaka tanımlayıcısına işaret ettiğini ve ayrıca ilgili kişilerdeki hangi sütunların bağlantıda yer alan vakaların benzersiz tanımlayıcılarına işaret ettiğini belirtmemiz gerekir. Bu bağlantılar, enfeksiyonun bulaştırıcıdan vakaya gittiği yöndedir, bu nedenle başlangıç ve sonuç değişkenlerini belirtmemiz gerekir. Bu sebeple, gelecekteki işlemleri etkileyecek olan yönlendirilmiş (directed) değişkenini TRUE olarak ayarladık. ## epicontacts nesnesi oluştur epic &lt;- make_epicontacts( linelist = linelist, contacts = contacts, id = &quot;case_id&quot;, from = &quot;infector&quot;, to = &quot;case_id&quot;, directed = TRUE ) Epicontacts nesnelerini inceledikten sonra, satır listesindeki case_id sütununun id olarak yeniden adlandırıldığını ve temaslılardaki case_id ve infector sütunlarının from (-den) ve to (-e) olarak yeniden adlandırıldığını görebiliriz. Bu adım, sonraki işleme, görselleştirme ve analiz işlemlerinde tutarlılık sağlar. ## epicontacts nesnesini göster epic ## ## /// Epidemiological Contacts // ## ## // class: epicontacts ## // 5,888 cases in linelist; 3,800 contacts; directed ## ## // linelist ## ## # A tibble: 5,888 × 30 ## id generation date_infe…¹ date_onset date_hos…² date_out…³ outcome gender ## &lt;chr&gt; &lt;dbl&gt; &lt;date&gt; &lt;date&gt; &lt;date&gt; &lt;date&gt; &lt;chr&gt; &lt;chr&gt; ## 1 5fe599 4 2014-05-08 2014-05-13 2014-05-15 NA &lt;NA&gt; m ## 2 8689b7 4 NA 2014-05-13 2014-05-14 2014-05-18 Recover f ## 3 11f8ea 2 NA 2014-05-16 2014-05-18 2014-05-30 Recover m ## 4 b8812a 3 2014-05-04 2014-05-18 2014-05-20 NA &lt;NA&gt; f ## 5 893f25 3 2014-05-18 2014-05-21 2014-05-22 2014-05-29 Recover m ## 6 be99c8 3 2014-05-03 2014-05-22 2014-05-23 2014-05-24 Recover f ## 7 07e3e8 4 2014-05-22 2014-05-27 2014-05-29 2014-06-01 Recover f ## 8 369449 4 2014-05-28 2014-06-02 2014-06-03 2014-06-07 Death f ## 9 f393b4 4 NA 2014-06-05 2014-06-06 2014-06-18 Recover m ## 10 1389ca 4 NA 2014-06-05 2014-06-07 2014-06-09 Death f ## # … with 5,878 more rows, 22 more variables: age &lt;dbl&gt;, age_unit &lt;chr&gt;, ## # age_years &lt;dbl&gt;, age_cat &lt;fct&gt;, age_cat5 &lt;fct&gt;, hospital &lt;chr&gt;, lon &lt;dbl&gt;, ## # lat &lt;dbl&gt;, infector &lt;chr&gt;, source &lt;chr&gt;, wt_kg &lt;dbl&gt;, ht_cm &lt;dbl&gt;, ## # ct_blood &lt;dbl&gt;, fever &lt;chr&gt;, chills &lt;chr&gt;, cough &lt;chr&gt;, aches &lt;chr&gt;, ## # vomit &lt;chr&gt;, temp &lt;dbl&gt;, time_admission &lt;chr&gt;, bmi &lt;dbl&gt;, ## # days_onset_hosp &lt;dbl&gt;, and abbreviated variable names ¹​date_infection, ## # ²​date_hospitalisation, ³​date_outcome ## ## // contacts ## ## # A tibble: 3,800 × 4 ## from to location duration ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; ## 1 f547d6 5fe599 Nosocomial 7 ## 2 f90f5f b8812a Community 3 ## 3 11f8ea 893f25 Community 6 ## 4 aec8ec be99c8 Nosocomial 9 ## 5 893f25 07e3e8 Community 6 ## 6 133ee7 369449 Nosocomial 9 ## 7 996f3a 2978ac Nosocomial 5 ## 8 133ee7 57a565 Community 8 ## 9 37a6f6 fc15ef Nosocomial 1 ## 10 9f6884 2eaa9a Community 2 ## # … with 3,790 more rows 38.3 İdare Altkümeleme epicontacts nesneleri için subset() yöntemi, diğer nesnelerin yanı sıra, satır listesinin (“düğüm(nod) öznitelikleri”) ve kişiler veritabanının (“kenar öznitelikleri”) özelliklerine dayalı olarak ağların filtrelenmesine olanak tanır. Bu değerler, ilgili bağımsız değişkene adlandırılmış listeler olarak iletilmelidir. Örneğin, aşağıdaki kodda sadece Nisan-Temmuz 2014 arasında enfeksiyonu olan (tarihler aralık olarak belirtilmiştir) erkek vakaları ve hastanede meydana gelen bulaşma bağlantılarını satır listesinde tutuyoruz. sub_attributes &lt;- subset( epic, node_attribute = list( gender = &quot;m&quot;, date_infection = as.Date(c(&quot;2014-04-01&quot;, &quot;2014-07-01&quot;)) ), edge_attribute = list(location = &quot;Nosocomial&quot;) ) sub_attributes ## ## /// Epidemiological Contacts // ## ## // class: epicontacts ## // 69 cases in linelist; 1,943 contacts; directed ## ## // linelist ## ## # A tibble: 69 × 30 ## id generation date_infe…¹ date_onset date_hos…² date_out…³ outcome gender ## &lt;chr&gt; &lt;dbl&gt; &lt;date&gt; &lt;date&gt; &lt;date&gt; &lt;date&gt; &lt;chr&gt; &lt;chr&gt; ## 1 5fe599 4 2014-05-08 2014-05-13 2014-05-15 NA &lt;NA&gt; m ## 2 893f25 3 2014-05-18 2014-05-21 2014-05-22 2014-05-29 Recover m ## 3 2978ac 4 2014-05-30 2014-06-06 2014-06-08 2014-06-15 Death m ## 4 57a565 4 2014-05-28 2014-06-13 2014-06-15 NA Death m ## 5 fc15ef 6 2014-06-14 2014-06-16 2014-06-17 2014-07-09 Recover m ## 6 99e8fa 7 2014-06-24 2014-06-28 2014-06-29 2014-07-09 Recover m ## 7 f327be 6 2014-06-14 2014-07-12 2014-07-13 2014-07-14 Death m ## 8 90e5fe 5 2014-06-18 2014-07-13 2014-07-14 2014-07-16 &lt;NA&gt; m ## 9 a47529 5 2014-06-13 2014-07-17 2014-07-18 2014-07-26 Death m ## 10 da8ecb 5 2014-06-20 2014-07-18 2014-07-20 2014-08-01 &lt;NA&gt; m ## # … with 59 more rows, 22 more variables: age &lt;dbl&gt;, age_unit &lt;chr&gt;, ## # age_years &lt;dbl&gt;, age_cat &lt;fct&gt;, age_cat5 &lt;fct&gt;, hospital &lt;chr&gt;, lon &lt;dbl&gt;, ## # lat &lt;dbl&gt;, infector &lt;chr&gt;, source &lt;chr&gt;, wt_kg &lt;dbl&gt;, ht_cm &lt;dbl&gt;, ## # ct_blood &lt;dbl&gt;, fever &lt;chr&gt;, chills &lt;chr&gt;, cough &lt;chr&gt;, aches &lt;chr&gt;, ## # vomit &lt;chr&gt;, temp &lt;dbl&gt;, time_admission &lt;chr&gt;, bmi &lt;dbl&gt;, ## # days_onset_hosp &lt;dbl&gt;, and abbreviated variable names ¹​date_infection, ## # ²​date_hospitalisation, ³​date_outcome ## ## // contacts ## ## # A tibble: 1,943 × 4 ## from to location duration ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; ## 1 f547d6 5fe599 Nosocomial 7 ## 2 aec8ec be99c8 Nosocomial 9 ## 3 133ee7 369449 Nosocomial 9 ## 4 996f3a 2978ac Nosocomial 5 ## 5 37a6f6 fc15ef Nosocomial 1 ## 6 b799eb bc2adf Nosocomial 7 ## 7 5d9e4d 8bd1e8 Nosocomial 8 ## 8 a15e13 f327be Nosocomial 7 ## 9 beb26e 959170 Nosocomial 3 ## 10 36e2e7 6d788e Nosocomial 10 ## # … with 1,933 more rows thin fonksiyonunu, ‘what = “linelist”’ değişkeniyle temaslılarda bulunan vakaları dahil etmek için satır listesini filtrelemek veya ‘what = “contacts”’ değişkeniyle satır listesinde bulunan vakaları dahil etmek için kullanabiliriz. Aşağıdaki kodda, yukarıda filtrelediğimiz Nisan ve Temmuz ayları arasında enfekte olan erkek vakaları içeren iletim bağlantılarını tutmak için epicontacts nesnesini ayrıca filtreliyoruz. Sadece iki bilinen iletim bağlantısının bu filtreye uyduğunu görebiliriz. sub_attributes &lt;- thin(sub_attributes, what = &quot;contacts&quot;) nrow(sub_attributes$contacts) ## [1] 4 Nod ve kenar özniteliklerine göre alt kümelemeye ek olarak, ağlar yalnızca belirli nodlara bağlı bileşenleri içerecek şekilde budanabilir. ‘Cluster_id’ değişkeni, vaka kimliklerinin bir vektörünü alır ve doğrudan veya dolaylı olarak bu kimliklere bağlı bireylerin satır listesini getirir. Aşağıdaki kodda, ‘2ae019’ ve ‘71577a’ içeren kümelerde toplam 13 satır listesi vakasının yer aldığını görebiliriz. sub_id &lt;- subset(epic, cluster_id = c(&quot;2ae019&quot;,&quot;71577a&quot;)) nrow(sub_id$linelist) ## [1] 13 epicontacts nesneleri için subset() yöntemi ayrıca cs, cs_min ve cs_max değişkenlerini kullanarak küme boyutuna göre filtrelemeye izin verir. Aşağıdaki kodda, yalnızca 10 vaka veya daha büyük kümelere dahil olan vakaları tutuyoruz ve bu kümelerde 271 satır listesi vakasının yer aldığını görebiliriz. sub_cs &lt;- subset(epic, cs_min = 10) nrow(sub_cs$linelist) ## [1] 271 ID’lere ulaşmak get_id() fonksiyonu, veri setindeki vaka kimlikleri hakkında bilgi toplar ve aşağıdaki gibi parametrelenebilir: • linelist: satır listesi verilerindeki kimlikler • contacts: temaslı veri setindeki kimlikler (“from-kimden” ve “to-kime” birleşik) • from: temaslı veri setinin “kimden” sütunundaki kimlikler • to: temaslı veri setinin “to” sütunundaki kimliklere • all: Her iki veri kümesinde de herhangi bir yerde görünen kimlikler • common: Hem temaslı veri setinde hem de satır listesinde görünen kimlikler Örneğin, veri kümesindeki ilk on kimlik nedir? contacts_ids &lt;- get_id(epic, &quot;contacts&quot;) head(contacts_ids, n = 10) ## [1] &quot;f547d6&quot; &quot;f90f5f&quot; &quot;11f8ea&quot; &quot;aec8ec&quot; &quot;893f25&quot; &quot;133ee7&quot; &quot;996f3a&quot; &quot;37a6f6&quot; ## [9] &quot;9f6884&quot; &quot;4802b1&quot; Hem satır listesinde hem de temaslılarda kaç kimlik var? length(get_id(epic, &quot;common&quot;)) ## [1] 4352 38.4 Görselleştirme Temel grafik oluşturma Epicontacts nesnelerinin tüm görselleştirmeleri, plot fonksiyonu tarafından gerçekleşitirilr. İlk önce epicontacts nesnesini subset fonksiyonunu kullanarak yalnızca Haziran 2014 başlangıç tarihine sahip vakaları içerecek şekilde filtreleyeceğiz ve thin fonksiyonu kullanarak bu vakalarla bağlantılı kişileri dahil edeceğiz. ## epicontacts nesnesi alt kümesi sub &lt;- epic %&gt;% subset( node_attribute = list(date_onset = c(as.Date(c(&quot;2014-06-30&quot;, &quot;2014-06-01&quot;)))) ) %&gt;% thin(&quot;contacts&quot;) Daha sonra basit bir etkileşimli grafiği aşağıdaki gibi kolay şekilde oluşturabiliriz: ## epicontacts nesne grafiği plot( sub, width = 700, height = 700 ) Bu grafiği daha da değiştirmek için çok sayıda değişken bulunur. Esas olanları burada ele alacağız, ancak fonksiyonun tam bir açıklamasını elde etmek için ?vis_epicontacts (bir epicontacts nesnesi üzerinde çizim kullanılırken çağrılan fonksiyon) aracılığıyla belgelere bakın. ####Nod özelliklerinin görselleştirilmesi {.unnumbered} Nod rengi, şekli ve boyutu, node_color, node_shape ve node_size bağımsız değişkenleri kullanılarak satır listesindeki belirli bir sütuna eşlenebilir. Bu, ggplot2’den tanıyabileceğiniz aes sözdizimine benzer. Nodların belirli renkleri, şekilleri ve boyutları aşağıdaki gibi belirlenebilir: • Col_pal değişkeni aracılığıyla, aşağıda yapıldığı gibi her rengin manuel olarak belirtilmesi için bir ad listesi yazarak ya da colorRampPalette(c(“siyah”, “kırmızı”, “turuncu”) gibi bir renk paleti fonksiyonu ile sağlayarak), belirtilenler arasında bir renk gradyanı oluşturulabilir. • Shapes (Şekiller) adlandırılmış bir liste ileterek, node_shape tarafından belirtilen satır listesi sütunundaki her benzersiz öğe için bir şekil belirtilebilir. Kullanılabilir şekiller için codeawesome’a bakın. • Size_range nodların boyut aralığını ileterek boyutlandırma. Rengin sonucu, cinsiyetin şekli ve yaşın ise boyutu temsil ettiği bir örnek: plot( sub, node_color = &quot;outcome&quot;, node_shape = &quot;gender&quot;, node_size = &#39;age&#39;, col_pal = c(Death = &quot;firebrick&quot;, Recover = &quot;green&quot;), shapes = c(f = &quot;female&quot;, m = &quot;male&quot;), size_range = c(40, 60), height = 700, width = 700 ) Kenar özelliklerinin görselleştirilmesi Kenar rengi, genişliği ve çizgi tipi, edge_color, edge_width ve edge_linetype değişkenleri kullanılarak temasların veri çerçevesindeki belirli bir sütuna eşlenebilir. Kenarların belirli renkleri ve genişlikleri aşağıdaki gibi belirtilebilir: • Col_pal için kullanılanla aynı şekilde edge_col_pal aracılığıyla renkler. • Genişlik_aralığı argümanına nodların boyut aralığını ileterek genişlik belirlenir İşte bir örnek: plot( sub, node_color = &quot;outcome&quot;, node_shape = &quot;gender&quot;, node_size = &#39;age&#39;, col_pal = c(Death = &quot;firebrick&quot;, Recover = &quot;green&quot;), shapes = c(f = &quot;female&quot;, m = &quot;male&quot;), size_range = c(40, 60), edge_color = &#39;location&#39;, edge_linetype = &#39;location&#39;, edge_width = &#39;duration&#39;, edge_col_pal = c(Community = &quot;orange&quot;, Nosocomial = &quot;purple&quot;), width_range = c(1, 3), height = 700, width = 700 ) Temporal eksen x_axis değişkeni satır listesindeki bir sütuna eşleyerek ağı zamansal bir eksen boyunca görselleştirebiliriz. Aşağıdaki örnekte, x ekseni, semptom başlangıç tarihini temsil eder. Ayrıca okların çok büyük olmamasını sağlamak için arrow_size (ok boyutu) değişkenini belirledik ve şekli daha az karmaşık hale getirmek için label değişkenini = YANLIŞ olarak ayarladık. plot( sub, x_axis = &quot;date_onset&quot;, node_color = &quot;outcome&quot;, col_pal = c(Death = &quot;firebrick&quot;, Recover = &quot;green&quot;), arrow_size = 0.5, node_size = 13, label = FALSE, height = 700, width = 700 ) Bu ağın zamansal bir eksen boyunca nasıl görselleştirildiğini daha ayrıntılı olarak göstermek için çok sayıda ek argüman vardır; bunları ?vis_temporal_interactive (bir epicontacts nesnesi üzerinde çizimi x_axis üzerinden belirtilen şekilde göstermek çağrılan fonkisyon) aracılığıyla inceleyebilirsiniz. Aşağıda bazılarını gözden geçireceğiz. İletim ağacı şeklinin belirlenmesi Network_shape değişkeni kullanılarak belirtilen, iletim ağacının alabileceği iki ana şekil vardır. Birincisi, düz bir kenarın herhangi iki düğümü birleştirdiği, yukarıda gösterildiği gibi bir dallanma şeklidir. Bu en iyi anlaşılan temsildir, ancak yoğun bir şekilde bağlantılar içeren bir ağda üst üste binen kenarlara neden olabilir. İkinci şekil, bir filogenik ağaca benzeyen bir ağaç oluşturan dikdörtgendir. Örneğin: plot( sub, x_axis = &quot;date_onset&quot;, network_shape = &quot;rectangle&quot;, node_color = &quot;outcome&quot;, col_pal = c(Death = &quot;firebrick&quot;, Recover = &quot;green&quot;), arrow_size = 0.5, node_size = 13, label = FALSE, height = 700, width = 700 ) Her durum nodunda, position_dodge değişkeni değiştirilerek benzersiz bir dikey konum atanabilir. Bağlantısız vakaların konumu (yani, bildirilen herhangi bir kişi olmadan), unlinked_pos değişkeni kullanılarak belirtilir. plot( sub, x_axis = &quot;date_onset&quot;, network_shape = &quot;rectangle&quot;, node_color = &quot;outcome&quot;, col_pal = c(Death = &quot;firebrick&quot;, Recover = &quot;green&quot;), position_dodge = TRUE, unlinked_pos = &quot;bottom&quot;, arrow_size = 0.5, node_size = 13, label = FALSE, height = 700, width = 700 ) Üst nodun alt nodlara göre konumu, ‘parent_pos’ değişkeni kullanılarak belirlenebilir. Varsayılan seçenek, üst nodu ortaya yerleştirmektir, ancak altta (parent_pos = ‘alt’) veya üstte (parent_pos = ‘üst’) yerleştirilebilir. plot( sub, x_axis = &quot;date_onset&quot;, network_shape = &quot;rectangle&quot;, node_color = &quot;outcome&quot;, col_pal = c(Death = &quot;firebrick&quot;, Recover = &quot;green&quot;), parent_pos = &quot;top&quot;, arrow_size = 0.5, node_size = 13, label = FALSE, height = 700, width = 700 ) Şekil ve grafiklerin kaydedilmesi VisNetwork paketindeki ‘visSave’ fonksiyonuyla bir grafiği etkileşimli, bağımsız bir html dosyası olarak kaydedebilirsiniz: plot( sub, x_axis = &quot;date_onset&quot;, network_shape = &quot;rectangle&quot;, node_color = &quot;outcome&quot;, col_pal = c(Death = &quot;firebrick&quot;, Recover = &quot;green&quot;), parent_pos = &quot;top&quot;, arrow_size = 0.5, node_size = 13, &quot;&quot; label = FALSE, height = 700, width = 700 ) %&gt;% visNetwork::visSave(&quot;network.html&quot;) Bu ağ çıktılarını bir görüntü olarak kaydetmek ne yazık ki zordur ve dosyayı bir html olarak kaydetmenizi ve ardından ‘webshot’ paketini kullanarak bu dosyanın ekran görüntüsünü almanızı gerektirir. Aşağıdaki kodda, yukarıda kaydedilen html dosyasını PNG’ye dönüştürüyoruz: webshot(url = &quot;network.html&quot;, file = &quot;network.png&quot;) Zaman Çizelgeleri Ayrıca, her bir vakanın x ekseninde temsil edildiği zaman çizelgeleri de verebilirsiniz. Zaman çizergeleri, vaka konumlarını veya sonuca ulaşma zamanını görselleştirmek için kullanılabilir. Bir zaman çizelgesi oluşturmak için, vaka kimliğini, “olay”ın başlangıç tarihini ve “olay”ın bitiş tarihini gösteren en az üç sütundan oluşan bir veri çerçevesi oluşturmamız gerekiyor. Ayrıca, zaman çizelgesinin nod ve kenar özelliklerine eşlenebilecek başka bir sütun da ekleyebilirsiniz. Aşağıdaki kodda, semptom başlangıcından sonuç tarihine kadar bir zaman çizelgesi oluşturuyoruz ve nod şeklini ve rengini tanımlamak için kullandığımız sonuç ve hastane değişkenlerini veri tabanımızda tutuyoruz. Örneğin, bir vaka birden fazla hastane arasında sevk ediliyorsa, vaka başına birden fazla zaman çizelgesi satırına/olayına sahip olabileceğinizi unutmayın. ## zaman çizelgesini oluştur timeline &lt;- linelist %&gt;% transmute( id = case_id, start = date_onset, end = date_outcome, outcome = outcome, hospital = hospital ) Daha sonra zaman çizelgesi öğesini ‘timeline’ değişkenine iletiriz. Zaman çizelgesi özniteliklerini zaman çizelgesi nod renklerine, şekillerine ve boyutlarına önceki bölümlerde tanımlandığı şekilde eşleyebiliriz, ancak iki nodumuz vardır: Bir zaman çizelgesinin ayrı ayrı değişkenleri olan başlangıç ve bitiş nodları. Örneğin, ‘tl_start_node_color’, hangi zaman çizelgesi sütununun başlangıç nodunun rengiyle eşlendiğini tanımlarken ‘tl_end_node_shape’, hangi zaman çizelgesi sütununun bitiş nodunun şekliyle eşlendiğini tanımlar. Ayrıca ’tl_edge_*’ değişkenleri aracılığıyla renk, genişlik, çizgi tipi ve etiketleri zaman çizelgesi kenarına eşleyebiliriz. Değişkenlerle ilgili ayrıntılı belgeler için ‘?vis_temporal_interactive’ e (bir epicontacts nesnesi çizilirken çağrılan fonksiyon) bakın. Her değişken aşağıdaki kodda da açıklanmıştır: ## şekilleri tanımla shapes &lt;- c( f = &quot;female&quot;, m = &quot;male&quot;, Death = &quot;user-times&quot;, Recover = &quot;heartbeat&quot;, &quot;NA&quot; = &quot;question-circle&quot; ) ## renkleri tanımla colours &lt;- c( Death = &quot;firebrick&quot;, Recover = &quot;green&quot;, &quot;NA&quot; = &quot;grey&quot; ) ## grafiği oluştur plot( sub, ## başlangıç tarihi için maksimum x koordinatı x_axis = &quot;date_onset&quot;, ## dikdörtgen ağ şeklini kullan network_shape = &quot;rectangle&quot;, ## nod şekillerini cinsiyet sütununa göre şekillendir node_shape = &quot;gender&quot;, ## nod rengini herhangi bir sütun ile eşleştirmiyoruz çünkü varsayılan değeri id sütunudur bu da renk şemamızı bozar node_color = NULL, ## nod büyüklüğünü 30’a ayarla (nod büyüklüğü herhangi bir karakter değildir, herhangi bir sütuna eşleştirilmez, doğrudan nod büyüklüğü belirtilir node_size = 30, ## iletim bağlantısı kalınlığını 4’e ayarla (bu kalınlık bir karakter ile eşleşmemiştir) edge_width = 4, ## zaman çizelgesi nesnesi sağla timeline = timeline, ## bitiş nodunun şeklini zaman çizelgesi nesnesindeki sonuç sütununa eşle tl_end_node_shape = &quot;outcome&quot;, ## son nodun boyutunu 15&#39;e ayarla (bir karakter olmadığından, bu argüman bir sütuna eşlenmez, bunun yerine gerçek nod boyutu olarak yorumlanır) tl_end_node_size = 15, ## zaman çizelgesi kenarının rengini hastane sütununa eşle tl_edge_color = &quot;hospital&quot;, ## zaman çizelgesi kenarının genişliğini 2&#39;ye ayarla (bu bir karakter olmadığından, bu değişken bir sütuna eşlenmez, bunun yerine gerçek kenar genişliği olarak yorumlanır) tl_edge_width = 2, ## kenar etiketlerini hastane değişkenine eşleyin tl_edge_label = &quot;hospital&quot;, ## nod şeklini belirt (yukarıda tanımlanmıştır) shapes = shapes, ## renk paletini belirt (yukarıda tanımlanmıştır) col_pal = colours, ## ok büyüklüğünü 0.5’e ayarla arrow_size = 0.5, ## lejantta iki sütun olsun legend_ncol = 2, ## font büyüklüğünü ayarla font_size = 15, ## tarih formatı ayarla date_labels = c(&quot;%d %b %Y&quot;), ## nodların altında ID etiketini grafik olarak gösterme label = FALSE, ## yüksekliği belirt height = 1000, ## genişliği belirt width = 1200, ## her vaka nodunun benzersiz bir y koordinatına sahip olduğundan emin olun - zaman çizelgelerini kullanırken bu çok önemlidir, aksi takdirde farklı vakalarda çakışan zaman çizelgeleriniz olur position_dodge = TRUE ) ## Warning in assert_timeline(timeline, x, x_axis): 5865 timeline row(s) removed as ## ID not found in linelist or start/end date is NA 38.5 Analiz Özetleme ‘summary’ fonkisyonunu kullanarak bazı ağ özelliklerine genel bir bakış elde edebiliriz. ## epicontacts nesnesini özetle summary(epic) ## ## /// Overview // ## // number of unique IDs in linelist: 5888 ## // number of unique IDs in contacts: 5511 ## // number of unique IDs in both: 4352 ## // number of contacts: 3800 ## // contacts with both cases in linelist: 56.868 % ## ## /// Degrees of the network // ## // in-degree summary: ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## 0.0000 0.0000 1.0000 0.5392 1.0000 1.0000 ## ## // out-degree summary: ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## 0.0000 0.0000 0.0000 0.5392 1.0000 6.0000 ## ## // in and out degree summary: ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## 0.000 1.000 1.000 1.078 1.000 7.000 ## ## /// Attributes // ## // attributes in linelist: ## generation date_infection date_onset date_hospitalisation date_outcome outcome gender age age_unit age_years age_cat age_cat5 hospital lon lat infector source wt_kg ht_cm ct_blood fever chills cough aches vomit temp time_admission bmi days_onset_hosp ## ## // attributes in contacts: ## location duration Örneğin, temaslıların yalnızca %57’sinin satır listesinde her iki vakaya da sahip olduğunu görebiliriz. Bu iletim zincirlerine dahil olan önemli sayıda vaka hakkında linelist veriye sahip olmadığımız anlamına gelir. Çift Özellikleri ‘get_pairwise()’ fonkisyonu, temaslı veri kümesindeki her bir çifte göre satır listesindeki değişken(ler)in işlenmesine izin verir. Aşağıdaki örnekte, her bir çift için hastalık başlangıç tarihi arasındaki farkı hesaplamak için, hastalık başlangıç tarihi satır listesinden çıkarılır. Bu karşılaştırmadan üretilen değer, seri aralığını (serial interval-si) temsil eder. si &lt;- get_pairwise(epic, &quot;date_onset&quot;) summary(si) ## Min. 1st Qu. Median Mean 3rd Qu. Max. NA&#39;s ## 0.00 5.00 9.00 11.01 15.00 99.00 1820 tibble(si = si) %&gt;% ggplot(aes(si)) + geom_histogram() + labs( x = &quot;Serial interval&quot;, y = &quot;Frequency&quot; ) ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Warning: Removed 1820 rows containing non-finite values (`stat_bin()`). ‘get_pairwise()’, karşılaştırma için kullanılan sütunun sınıfını yorumlayacak ve buna göre değerleri karşılaştırma yöntemini ayarlayacaktır. Sayılar ve tarihler için (yukarıdaki si örneğinde olduğu gibi) fonksiyon, değerleri çıkaracaktır. Karakter içeren veya kategorik sütunlara uygulandığında, get_pairwise() fonksiyonu değerleri birbirine yapıştırır. Fonksiyon aynı zamanda keyfi işlemeye de izin verdiğinden (bkz. “f” değişkeni), bu ayrık kombinasyonlar kolayca tablo haline getirilebilir ve analiz edilebilir. head(get_pairwise(epic, &quot;gender&quot;), n = 10) ## [1] &quot;f -&gt; m&quot; NA &quot;m -&gt; m&quot; NA &quot;m -&gt; f&quot; &quot;f -&gt; f&quot; NA &quot;f -&gt; m&quot; ## [9] NA &quot;m -&gt; f&quot; get_pairwise(epic, &quot;gender&quot;, f = table) ## values.to ## values.from f m ## f 464 516 ## m 510 468 fisher.test(get_pairwise(epic, &quot;gender&quot;, f = table)) ## ## Fisher&#39;s Exact Test for Count Data ## ## data: get_pairwise(epic, &quot;gender&quot;, f = table) ## p-value = 0.03758 ## alternative hypothesis: true odds ratio is not equal to 1 ## 95 percent confidence interval: ## 0.6882761 0.9892811 ## sample estimates: ## odds ratio ## 0.8252575 Burada, iletim bağlantıları ve cinsiyet arasında önemli bir ilişki görüyoruz. Kümelerin tanımlanması get_clusters() fonksiyonu, bir epicontacts nesnesindeki bağlı bileşenleri tanımlamak için kullanılabilir. İlk olarak, küme bilgisini içeren bir veri çerçevesi elde etmek için kullanırız: clust &lt;- get_clusters(epic, output = &quot;data.frame&quot;) table(clust$cluster_size) ## ## 1 2 3 4 5 6 7 8 9 10 11 12 13 14 ## 1536 1680 1182 784 545 342 308 208 171 100 99 24 26 42 ggplot(clust, aes(cluster_size)) + geom_bar() + labs( x = &quot;Cluster size&quot;, y = &quot;Frequency&quot; ) En büyük kümelere bakalım. Bunun için epicontacts nesnesine küme bilgisi ekliyoruz ve ardından yalnızca en büyük kümeleri içerecek şekilde alt kümelerini oluşturuyoruz: epic &lt;- get_clusters(epic) max_size &lt;- max(epic$linelist$cluster_size) plot(subset(epic, cs = max_size)) Derecelerin hesaplanması Bir nodun derecesi, kenar sayısına veya diğer nodlarla olan bağlantılarına karşılık gelir. ‘get_degree()’, epicontacts ağları için bu değeri hesaplamakta kolay bir yöntem sağlar. Bu bağlamda yüksek bir derece, başkalarıyla temas halinde olan bir kişiyi gösterir. ‘type’ değişkeni hem dereceyi hem de dereceyi saymak istediğimizi belirtir, ‘only_linelist’ değişkeni sadece satır listesindeki vakalar için dereceyi hesaplamak istediğimizi belirtir. deg_both &lt;- get_degree(epic, type = &quot;both&quot;, only_linelist = TRUE) Hangi kişiler en fazla on temasa sahip? head(sort(deg_both, decreasing = TRUE), 10) ## 916d0a 858426 6833d7 f093ea 11f8ea 3a4372 38fc71 c8c4d5 a127a7 02d8fd ## 7 6 6 6 5 5 5 5 5 5 Ortalama temaslı sayısı nedir? mean(deg_both) ## [1] 1.078473 38.6 Kaynaklar epicontacts page Epicontacts sayfası, paket fonksiyonlarına genel bir bakış sağlar ve bazı daha ayrıntılı gösterimler içerir. github page Github sayfası, sorunları dile getirmek ve yeni özellikler talep etmek için kullanılabilir. 39 Filogenetik ağaçlar Placeholder 39.1 Genel Bakış 39.2 Hazırlık Paketlerin yüklenmesi Verilerin içe aktarımı Temizleme ve inceleme 39.3 Temel ağaç görselleştirmesi Farklı ağaç düzenlemeleri Örnek veriyi içeren basit ağaç 39.4 Ağacın Manipülasyonu Yakınlaştırmak Daralan dallar Ağacın alt kümelere ayrılması Ağaçtaki nodları döndürmek Numune verilerini içeren açıklamalı örnek alt ağaç Daha karmaşık ağaçlar: Örnek verilerin ısı haritalarını ekleme 39.5 Kaynaklar 40 Interactive plots Placeholder 40.1 Preparation Load packages Start with a ggplot() Import data 40.2 Plot with ggplotly() 40.3 Modifications File size Buttons 40.4 Heat tiles 40.5 Resources 41 R Markdown ile Raporlar Placeholder 41.1 Hazırlık 41.2 Başlangıç rmarkdown R paketini yükleme Yeni bir Rmd dosyası başlatmak Bilinmesi önemli noktalar 41.3 R Markdown bileşenleri YAML metadatası Metin Yeni Satırlar Metin Karakteri Renk Başlıklar Madde İşaretleri ve Numaralandırma Metne yorum yapılması Kod parçaları Metin İçinde R Kodu Görseller Tablolar Sekmeli Bölümler 41.4 Dosya yapısı Kendine yeten Rmd Diğer dosyaları kaynak olarak kullanma Runfile Dosya yapısı 41.5 Belgenin oluşturulması Seçenek 1: “Knit” butonu Seçenek 2: render() komutu Seçenek 3: reportfactory paketi 41.6 Parametreli Raporlar Parametrelerin ayarlanması Seçenek 1: YAML içinde parametrelerin ayarlanması Seçenek 2: Parametrelerin render() ile ayarlanması Seçenek 3: Bir Görsel Kullanıcı Arayüzü kullanarak parametreleri ayarlayın Parametreli örnek params olmadan parametreli hale getirme 41.7 Döngülü raporlar 41.8 Şablonlar Word belgeleri Powerpoint belgeleri Şablonların YAML’e entegrasyonu HTML dosyalarının formatlanması 41.9 Dinamik içerik Tablolar HTML araçları 41.10 Kaynaklar 42 Rutin raporların düzenlenmesi Placeholder 42.1 Hazırlık Paketleri yüklemek 42.2 Yeni fabrika 42.3 Bir rapor oluşturun 42.4 Derlemek (Compile) Adına göre derleyin Numarasına göre derleyin Tümünü Derleyin Alt klasöründen derleyin Parametrelendirme “Çalışma dosyası” kullanma 42.5 Çıktılar 42.6 Muhtelif İçerikler Knit Betikler Ekstralar 42.7 Kaynaklar 43 R Markdown ile gösterge panelleri Placeholder 43.1 Hazırlık Paketlerin yüklenmesi Verileri içe aktarın 43.2 Yeni bir R Markdown oluştur 43.3 Komutlar YAML Kod parçaları Anlatı metni Başlıklar 43.4 Bölüm Özellikleri 43.5 Yerleşim Düzeni Sayfalar Oryantasyon Sekmeler 43.6 İçerik Ekleme Metin Tablo Grafikler İnteraktif grafikler HTML Araçları 43.7 Kodun düzenlenmesi 43.8 Shiny Ayarlar Üzerinde çalışılmış örnek Diğer Örnekler 43.9 Paylaşım 43.10 Kaynaklar 44 Shiny ile Gösterge Panelleri Placeholder 44.1 Hazırlık Paketleri yükleme Verileri içe aktarma 44.2 Shiny uygulamasının yapısı Temel dosya yapıları Sunucu ve kullanıcı arayüzü (ui) Bir uygulama oluşturmadan önce 44.3 Kullanıcı Arayüzü (IU) Oluşturmak 44.4 Verinin uygulamamıza yüklenmesi 44.5 Bir uygulama sunucusu geliştirme 44.6 Daha fazla işlevsellik eklemek Statik metin eklemek Bir link (köprü) eklemek İndirme düğmesi eklemek Tesis seçici eklemek Tabloya yeni bir sekme eklemek 44.7 Shiny Uygulamalarının Paylaşılması 44.8 İleri okuma 44.9 Önerilen shiny uzantıları 45 Yazma fonksiyonları Placeholder 45.1 Hazırlık Paketleri yüklemek Verileri içe aktar 45.2 Fonksiyonlar 45.3 Neden bir fonksiyon kullanırsın? 45.4 R, fonksiyonları nasıl oluşturur? 45.5 Temel sözdizimi ve yapı 45.6 Örnekler Birkaç sütun için orantı tablolarını döndürmek 45.7 purrr kullanımı: yinelemeli olarak uygulanabilen yazma fonksiyonları Bir veri kümesindeki birden çok sütunun sınıfını değiştirin Değişkeninin farklı seviyeleri için yinelemeli olarak grafikler üretin Bir değişkenin farklı seviyeleri için yinelemeli olarak tablolar üretin 45.8 İyi işleyen fonksiyonlar için ipuçları ve en iyi Uygulamalar Adlandırma ve sözdizimi Sütun adları ve düzenli değerlendirme Test ve Hata işleme 45.9 Kaynaklar 46 Dizin etkileşimleri Placeholder 46.1 Hazırlık fs paketi Dizini bir dendrogram ağacı olarak yazdır 46.2 Bir dizindeki dosyaları listeleyin 46.3 Dosya bilgisi 46.4 Var olup olmadığını kontrol edin R nesneleri Dizinler Dosyalar 46.5 Oluşturmak Dizinler Dosyalar Yoksa oluştur 46.6 Silmek R nesneleri Dizinler Dosyalar 46.7 Diğer dosyaları çalıştırma source() render() Dosyaları dizinde çalıştırın Dosyaları dizine aktarın 46.8 R tabanı 46.9 Kaynaklar 47 Git ve Github ile sürüm kontrolü ve işbirliği Placeholder 47.1 Git nedir? 47.2 Neden Git ve Github kombinasyonunu kullanmalısınız? Kulağa karmaşık geliyor, ben programcı değilim 47.3 Kurmak Git’i yükleyin Bir arayüz kurun (isteğe bağlı ancak önerilir) Github hesabı 47.4 Kelime bilgisi, kavramlar ve temel işlevler Depo Taahhütler Şubeler Yerel ve uzak depolar 47.5 Başlayın: yeni bir depo oluşturun Başlangıç dosyaları Github’da yeni bir depo oluşturun Github deposundan klonlama Rstudio’da Github Desktop’ta Mevcut R projesinden yeni Github deposu Şimdi nasıl görünüyor? RStudio’da Github Masaüstünde 47.6 Git + Github iş akışı Sürece genel bakış 47.7 Yeni bir dal oluştur Rstudio Git bölmesinde Masaüstünde Github Konsol Kullanırken 47.8 Değişiklikleri Uygula (Commit Changes) Rstudio’da Masaüstünde Github Konsolda Önceki bir commit’i değiştirin 47.9 Değişiklikleri Github’a kadar çekin ve iletin Rstudio’da Github Desktop’ta Konsol Çekmek istiyorum ama yerel işim var 47.10 Dalını Ana Gövde ile birleştir Yerel olarak Github Desktop’ta Konsolda Github’da: çekme istekleri gönderme Çakışmaları çözme Dalınızı silin 47.10.0.1 Github + Rstudio 47.10.0.2 Github Masaüstünde Çatallama 47.11 Öğrendiklerimiz 47.12 Git komutları Önerilen öğrenim Komutların girileceği yer Örnek komutlar 47.13 Kaynaklar 48 Yaygın hatalar Placeholder 48.1 Hata mesajlarını yorumlama 48.2 Yaygın hatalar Yazım hataları Paket hataları Nesne hataları Fonksiyon sözdizimi hataları Mantık hataları Faktör hataları Çizim hataları R Markdown hataları Çeşitli Konular 48.3 Kaynaklar 49 Yardım alma Placeholder 49.1 Github sorunları 49.2 Tekrarlanabilir örnek reprex paketi Minimum veri 49.3 Bir foruma gönderme 49.4 Kaynaklar 50 Ağ sürücülerinde R Placeholder 50.1 Genel Bakış 50.2 Yönetici olarak RStudio 50.3 Faydalı komutlar 50.4 Sık karşılaşılan hataları giderme 51 Veri tablosu Placeholder 51.1 Veri tablolarına giriş 51.2 Paketleri yükleyin ve verileri içe aktarın Paketleri yükleyin Verileri içe aktar 51.3 i değişkeni: satırları seçme ve filtreleme Filtreleme için yardımcı fonksiyonları kullanma 51.4 j değişkeni: sütunları seçme ve hesaplama Sütunları seçme Sütunlarda hesaplama 51.5 Değişkene göre: gruplara göre hesaplama 51.6 Veri tablolarına ekleme ve güncelleme 51.7 Kaynaklar "]]
